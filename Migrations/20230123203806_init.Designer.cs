// <auto-generated />
using System;
using ExchangeRate.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeRate.Migrations
{
    [DbContext(typeof(ExchangeRateDbContext))]
    [Migration("20230123203806_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExchangeRate.Entities.ApiKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("ExchangeRate.Entities.Cache", b =>
                {
                    b.Property<string>("FirstCurrency")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecondCurrency")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExchangeRateValue")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("FirstCurrency", "SecondCurrency", "Date");

                    b.ToTable("Caches");
                });
#pragma warning restore 612, 618
        }
    }
}
